#############################################################
# AEYE Web Docker Compose File
# Created By Yoonchul Chung
# Created At 2024.08.03
# Welcome to Visit Github : https://github.com/Yoonchulchung
#############################################################
version: '3.8'

services:
  frontend:
    build:
      context: ..
      dockerfile: Docker/Front/Dockerfile
    image: aeye_web_front:1.0
    container_name:  aeye_web_front
    ports:
      - "3000:3000"
    command: sh -c "npm run build && npm start"
    networks:
      - aeye_web
  backend:
      build:
        context: ..
        dockerfile: Docker/Backend/Dockerfile
      image: aeye_web_backend:1.0
      container_name:  aeye_web_backend
      ports:
        - "8000:8000"
      command: sh -c "npm run build && npm start"
      networks:
        - aeye_web
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    command: >
      mysqld
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_0900_ai_ci
      --default-authentication-plugin=mysql_native_password
    volumes:
      - ../AEYE_SQL:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: 
      - aeye_web
  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - ../AEYE_PostgreSQL:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks: 
      - aeye_web
  ai:
    build:
      context: ..
      dockerfile: Docker/AI/Dockerfile
    image: aeye_ai:1.0
    container_name:  aeye_ai
    ports:
      - "6000:6000"
    command: sh -c "npm run build && npm start"
    networks:
      - aeye_web
networks:
  aeye_web:
    driver: bridge